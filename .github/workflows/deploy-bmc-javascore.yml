name: 'Deploy BMC Javascore'

on:
  workflow_dispatch:
  workflow_call:

jobs:
  deploy-bmc-javascore:
    name: deploy bmc Javascore to testnet
    runs-on: ubuntu-latest
    container:
      image: iconbridge/build
      options: --user 1001
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-7`" >> $GITHUB_ENV

      - name: Build javascore bmc optimized jar
        working-directory: ./javascore
        run: gradle bmc:optimizedJar

      - name: Retrieve the secret and decode it to a file
        working-directory: ./javascore
        env:
          GOLOOP_RPC_KEY_STORE_B64: ${{ secrets.GOLOOP_RPC_KEY_STORE_B64 }}
        run: |
          echo $GOLOOP_RPC_KEY_STORE_B64 | base64 -d > key.json

      - name: Deploy javascore bmc optimized jar
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_KEY_PASSWORD: ${{ secrets.GOLOOP_RPC_KEY_PASSWORD }}
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
        run: |
          goloop rpc --uri $GOLOOP_RPC_URI sendtx deploy bmc/build/libs/bmc-optimized.jar --key_store=./key.json --nid 0x2 --content_type application/java --step_limit 3000000000 --param _net=0x2.icon | jq -r . | tee tx.icon.bmc

      - name: Deployment txresult
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
        run: |
          while true; do
            str=`goloop rpc --uri $GOLOOP_RPC_URI txresult $(cat tx.icon.bmc) | tee tx-icon-bmc || exit 0`
            echo Output: $str
            if cat tx-icon-bmc | jq ".status" | grep -q "0x1"; then
              break
            fi
            echo Wait
            sleep 2
          done
          echo Finished

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Sync tx.icon.bmc
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        run: |
          aws s3 cp ./javascore/tx-icon-bmc s3://$AWS_S3_BUCKET/tx-icon-bmc-$GITHUB_REF_NAME
          aws s3 mv ./javascore/tx-icon-bmc s3://$AWS_S3_BUCKET/tx-icon-bmc
