name: 'Deploy Token Javascore'

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      AWS_S3_BUCKET:
        required: true
      AWS_REGION:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      GOLOOP_RPC_KEY_STORE_B64:
        required: true
      GOLOOP_RPC_URI:
        required: true
      GOLOOP_RPC_KEY_PASSWORD:
        required: true
jobs:
  deploy-token-javascore:
    name: deploy token javascore
    runs-on: ubuntu-latest
    container:
      image: iconbridge/build
      options: --user 1001
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Checkout tools repo
        uses: actions/checkout@v3
        with:
          repository: icon-project/java-score-examples
          path: java-score-examples

      - name: javascore irc2.jar
        working-directory: ./java-score-examples
        run: |
          gradle irc2-token:clean
          gradle irc2-token:optimizedJar

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Sync tx-icon-bts-bmc for further steps
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        run: |
          aws s3 cp s3://$AWS_S3_BUCKET/icon-addr-bmc javascore/icon-addr-bmc
          aws s3 cp s3://$AWS_S3_BUCKET/icon-addr-bts javascore/icon-addr-bts

      - name: Retrieve the secret and decode it to a file
        working-directory: ./javascore
        env:
          GOLOOP_RPC_KEY_STORE_B64: ${{ secrets.GOLOOP_RPC_KEY_STORE_B64 }}
        run: |
          echo $GOLOOP_RPC_KEY_STORE_B64 | base64 -d > key.json

      - name: deploy_javascore_token
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_KEY_PASSWORD: ${{ secrets.GOLOOP_RPC_KEY_PASSWORD }}
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
        run: |
          goloop rpc sendtx deploy ../java-score-examples/irc2-token/build/libs/irc2-token-0.9.1-optimized.jar --key_store=./key.json --content_type application/java --param _name="btp-0x2.icon-sICX" --param _symbol="sICX" --param _initialSupply="0x5f5e100" --param _decimals="0x12" --nid 0x2 --content_type application/java --step_limit 3000000000 | jq -r . | tee icon.addr.sICX

      - name: configure_javascore_add_bmc_owner
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_KEY_PASSWORD: ${{ secrets.GOLOOP_RPC_KEY_PASSWORD }}
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
        run: |
          icon_bmc_owner=$(cat ./key.json | jq -r .address)

          goloop rpc sendtx call --to $(cat icon-addr-bmc) --method addOwner --param _addr=$icon_bmc_owner --key_store=./key.json --nid 0x2 --step_limit 3000000000| jq -r . > addbmcowner.icon

          goloop rpc sendtx deploy ../java-score-examples/irc2-token/build/libs/irc2-token-0.9.1-optimized.jar --key_store=./key.json --content_type application/java --param _name="btp-0x2.icon-sICX" --param _symbol="sICX" --param _initialSupply="0x5f5e100" --param _decimals="0x12" --nid 0x2 --content_type application/java --step_limit 3000000000 | jq -r . | tee tx.icon.sICX

      - name: configure_javascore_bmc_setFeeAggregator
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_KEY_PASSWORD: ${{ secrets.GOLOOP_RPC_KEY_PASSWORD }}
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
          FEE_GATHERING_INTERVAL: 1000
        run: |
          icon_bmc_owner=$(cat ./key.json | jq -r .address)

          goloop rpc sendtx call --to $(cat icon-addr-bmc) --key_store=./key.json --method setFeeAggregator --param _addr=$icon_bmc_owner --nid 0x2 --step_limit 3000000000| jq -r . >setFeeAggregator.icon
          sleep 5
          goloop rpc sendtx call --to $(cat icon-addr-bmc) --method setFeeGatheringTerm --key_store=./key.json --param _value=$FEE_GATHERING_INTERVAL --nid 0x2 --step_limit 3000000000 | jq -r . >setFeeGatheringTerm.icon
          sleep 5
          goloop rpc --uri $GOLOOP_RPC_URI txresult $(cat setFeeGatheringTerm.icon)

      - name: configure_javascore_add_bts
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_KEY_PASSWORD: ${{ secrets.GOLOOP_RPC_KEY_PASSWORD }}
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
          FEE_GATHERING_INTERVAL: 1000
        run: |
          icon_bmc_owner=$(cat ./key.json | jq -r .address)
          goloop rpc sendtx call --to $(cat icon-addr-bmc) --key_store=./key.json \
                --method addService \
                --value 0 \
                --param _addr=$(cat icon-addr-bts) \
                --param _svc="bts" --nid 0x2 --step_limit 3000000000 | jq -r . >addService.icon

      - name: configure_javascore_add_bts_owner
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_KEY_PASSWORD: ${{ secrets.GOLOOP_RPC_KEY_PASSWORD }}
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
        run: |
          icon_bts_owner=$(cat ./key.json | jq -r .address)
          goloop rpc sendtx call --to $(cat icon-addr-bts) --key_store=./key.json --method addOwner --param _addr=$icon_bts_owner --nid 0x2 --step_limit 3000000000 | jq -r . >addBtsOwner.icon
          sleep 5
          goloop rpc --uri $GOLOOP_RPC_URI txresult $(cat addBtsOwner.icon)

      - name: configure_javascore_bts_setICXFee
        working-directory: ./javascore
        shell: bash
        timeout-minutes: 1
        env:
          GOLOOP_RPC_KEY_PASSWORD: ${{ secrets.GOLOOP_RPC_KEY_PASSWORD }}
          GOLOOP_RPC_URI: ${{ secrets.GOLOOP_RPC_URI }}
        run: |
          icon_bts_owner=$(cat ./key.json | jq -r .address)
          goloop rpc sendtx call --to $(cat icon-addr-bts) --key_store=./key.json --method addOwner --param _addr=$icon_bts_owner --nid 0x2 --step_limit 3000000000 | jq -r . >addBtsOwner.icon
          sleep 5
          goloop rpc --uri $GOLOOP_RPC_URI txresult $(cat addBtsOwner.icon)

      - name: Sync files for further steps
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        run: |
          aws s3 cp javascore/icon.addr.sICX s3://$AWS_S3_BUCKET/icon.addr.sICX
